{"version":3,"file":"static/js/821.e7e683e5.chunk.js","mappings":"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","sources":["api/api.js","webpack://goit-react-hw-05-movies/./src/components/filmDetails/filmDetails.module.css?02f5","components/filmDetails/filmDetails.jsx","webpack://goit-react-hw-05-movies/./src/components/movieInfo/movieInfo.module.css?f7e0","components/movieInfo/movieInfo.jsx","pages/moviesDetailsPage/moviesDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '6caca0c75338accb735dd13cb80db2a1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nclass dataFetchApi {\n  #SEARCH = 'search/movie';\n  #TRAND = 'trending/movie/day';\n  #BASE = 'movie/';\n\n  trend = async page => {\n    const respons = await axios.get(\n      `${this.#TRAND}?api_key=${API_KEY}&page=${page}`\n    );\n    return respons.data.results;\n  };\n\n  search = async (query, page) => {\n    const respons = await axios.get(\n      `${this.#SEARCH}?api_key=${API_KEY}&query=${query}&page=${page}`\n    );\n    return respons.data;\n  };\n\n  fetchId = async id => {\n    const respons = await axios.get(`${this.#BASE}/${id}?api_key=${API_KEY}`);\n\n    return respons.data;\n  };\n\n  cast = async id => {\n    const respons = await axios.get(\n      `${this.#BASE}/${id}/credits?api_key=${API_KEY}`\n    );\n\n    return respons.data.cast;\n  };\n\n  reviews = async id => {\n    const respons = await axios.get(\n      `${this.#BASE}/${id}/reviews?api_key=${API_KEY}`\n    );\n\n    return respons.data.results;\n  };\n}\n\nconst api = new dataFetchApi();\n\nexport default api;\n\n\n  \n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"filmDetails_wrap__aLpMj\",\"link\":\"filmDetails_link__t2f4o\",\"img\":\"filmDetails_img__02HDV\",\"info\":\"filmDetails_info__PQ0xU\",\"title\":\"filmDetails_title__4pbx4\",\"year\":\"filmDetails_year__87Ya5\",\"subtitle\":\"filmDetails_subtitle__JIR2r\"};","import { Link, useLocation } from 'react-router-dom';\nimport s from './filmDetails.module.css';\n\nconst FilmDetails = data => {\n  const location = useLocation();\n  const infoDataFilm = data.data;\n\n  const { img, genres, overview, score, title, year } = infoDataFilm;\n\n  if (!data) {\n    return;\n  }\n  return (\n    <>\n      <Link to={location.state ?? '/'}>\n        <li className={s.link}>Go to back</li>\n      </Link>\n      <div className={s.wrap}>\n        <img src={img} alt={title} height=\"500\" width=\"400\" className={s.img} />\n        <div className={s.info}>\n          <h2 className={s.title}>\n            {title}\n            <span className={s.year}>({year})</span>\n          </h2>\n          <p className={s.score}>\n            User Score: <b>{score}%</b>{' '}\n          </p>\n          <h3 className={s.subtitle}>Overview</h3>\n          <p>{overview}</p>\n          <h3 className={s.subtitle}>Genres</h3>\n          <p>{genres}</p>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default FilmDetails;","// extracted by mini-css-extract-plugin\nexport default {\"info\":\"movieInfo_info__gSukF\",\"title\":\"movieInfo_title__8QSSY\",\"item\":\"movieInfo_item__yoL7N\"};","import { NavLink, useLocation } from 'react-router-dom';\nimport s from './movieInfo.module.css';\n\nconst MovieInfo = () => {\n  const location = useLocation();\n\n  return (\n    <div  className={s.info}>\n      <h3 className={s.title}>Additional information</h3>\n      <ul>\n        <li className={s.item}>\n          <NavLink to={'cast'} state={location.state}>\n            Cast\n          </NavLink>\n        </li>\n        <li className={s.item}>\n          <NavLink to={'reviews'} state={location.state}>\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieInfo;","import { useEffect, useState, Suspense } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport api from '../../api/api';\nimport FilmDetails from '../../components/filmDetails/filmDetails';\nimport MovieInfo from '../../components/movieInfo/movieInfo';\n\nconst MovieDetails = () => {\n  const [data, setData] = useState({});\n  const { movieId } = useParams();\n  useEffect(() => {\n    const dataModification = object => {\n      const genres = object.genres.map(genre => genre.name).join(', ');\n      const year = object['release_date'].split('-')[0];\n      const score = Math.ceil(object['vote_average'] * 10);\n      const newData = {\n        img: `https://image.tmdb.org/t/p/w500/${object['poster_path']}`,\n        title: object.title,\n        genres,\n        year,\n        score,\n        overview: object.overview,\n      };\n      setData(newData);\n    };\n\n    const fetchData = async () => {\n      try {\n        const response = await api.fetchId(movieId);\n        dataModification(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <FilmDetails data={data} />\n      <MovieInfo />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;"],"names":["API_KEY","axios","dataFetchApi","trend","page","respons","data","results","search","query","fetchId","id","cast","reviews","api","location","useLocation","infoDataFilm","img","genres","overview","score","title","year","to","state","className","s","src","alt","height","width","useState","setData","movieId","useParams","useEffect","dataModification","object","map","genre","name","join","split","Math","ceil","newData","fetchData","response","console","log","Suspense","fallback"],"sourceRoot":""}