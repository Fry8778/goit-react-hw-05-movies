{"version":3,"file":"static/js/471.3bc7b2ee.chunk.js","mappings":"mOAEMA,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAAzB,6DAEMC,GAAAA,EAAAA,EAAAA,IAAAA,SAAAA,IAAAA,IAAAA,EAAAA,MAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,OAAAA,eAAAA,KAAAA,EAAAA,CAAAA,UAAAA,EAAAA,MACM,iEACD,uEACD,gBAIRC,MAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAQ,WAAMC,GAAN,uFACgBH,IAAAA,IAAA,kBACjB,EADiB,0BACMD,EADN,iBACsBI,IAFtC,cACAC,EADA,yBAICA,EAAQC,KAAKC,SAJd,8FAARJ,GAAQ,KASRK,OAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAS,WAAOC,EAAOL,GAAd,uFACeH,IAAAA,IAAA,kBACjB,EADiB,0BACOD,EADP,kBACwBS,EADxB,iBACsCL,IAFrD,cACDC,EADC,yBAIAA,EAAQC,MAJR,gGAATE,GAAS,KASTE,QAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAU,WAAMC,GAAN,uFACcV,IAAAA,IAAA,kBAAa,EAAb,kBAA2BU,EAA3B,oBAAyCX,IADvD,cACFK,EADE,yBAGDA,EAAQC,MAHP,8FAAVI,GAAU,KAQVE,KAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAO,WAAMD,GAAN,uFACiBV,IAAAA,IAAA,kBACjB,EADiB,kBACHU,EADG,4BACmBX,IAFpC,cACCK,EADD,yBAKEA,EAAQC,KAAKM,MALf,8FAAPA,GAAO,KAUPC,QAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAU,WAAMF,GAAN,uFACcV,IAAAA,IAAA,kBACjB,EADiB,kBACHU,EADG,4BACmBX,IAFjC,cACFK,EADE,yBAKDA,EAAQC,KAAKC,SALZ,8FAAVM,EAAU,IASNC,EAAM,IAAIZ,EAEhB,K,4IC1DA,GAAgB,QAAU,yBAAyB,KAAO,sBAAsB,OAAS,wBAAwB,QAAU,0B,SCyC3H,EArCgB,WACd,OAAwBa,EAAAA,EAAAA,UAAS,IAAjC,eAAOT,EAAP,KAAaU,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,6GAEaN,EAAAA,EAAAA,QAAYG,GAFzB,OAEJI,EAFI,OAGVL,EAAQK,GAHE,gDAKVC,QAAQC,IAAR,MALU,yDAAH,qDAQXH,GAED,GAAE,IAEiB,IAAhBd,EAAKkB,QAEL,cAAGC,UAAWC,EAAAA,QAAd,sDAEgB,IAAhBpB,EAAKkB,QAEL,eAAIC,UAAWC,EAAAA,KAAf,SACGpB,EAAKqB,KAAI,SAACC,EAAIjB,GAAL,OACR,gBAAIc,UAAWC,EAAAA,KAAf,WACE,eAAGD,UAAWC,EAAAA,OAAd,WACE,oCADF,IACmBE,EAAGC,WAEtB,cAAGJ,UAAWC,EAAAA,QAAd,SAA0BE,EAAGE,YAJHnB,EADpB,WAHhB,CAcD,C","sources":["api/api.js","webpack://goit-react-hw-05-movies/./src/components/reviews/reviews.module.css?dfbc","components/reviews/reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '6caca0c75338accb735dd13cb80db2a1';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nclass dataFetchApi {\n  #SEARCH = 'search/movie';\n  #TRAND = 'trending/movie/day';\n  #BASE = 'movie/';\n\n  //? Home trend\n\n  trend = async page => {\n    const respons = await axios.get(\n      `${this.#TRAND}?api_key=${API_KEY}&page=${page}`\n    );\n    return respons.data.results;\n  };\n\n  //? search form\n\n  search = async (query, page) => {\n    const respons = await axios.get(\n      `${this.#SEARCH}?api_key=${API_KEY}&query=${query}&page=${page}`\n    );\n    return respons.data;\n  };\n\n  //? fetchId\n\n  fetchId = async id => {\n    const respons = await axios.get(`${this.#BASE}/${id}?api_key=${API_KEY}`);\n\n    return respons.data;\n  };\n\n  //? Cast\n\n  cast = async id => {\n    const respons = await axios.get(\n      `${this.#BASE}/${id}/credits?api_key=${API_KEY}`\n    );\n\n    return respons.data.cast;\n  };\n\n  //? Reviews\n\n  reviews = async id => {\n    const respons = await axios.get(\n      `${this.#BASE}/${id}/reviews?api_key=${API_KEY}`\n    );\n\n    return respons.data.results;\n  };\n}\n\nconst api = new dataFetchApi();\n\nexport default api;\n\n\n  \n","// extracted by mini-css-extract-plugin\nexport default {\"notInfo\":\"reviews_notInfo__Axd29\",\"item\":\"reviews_item__uOsgD\",\"author\":\"reviews_author__KE2jH\",\"content\":\"reviews_content__mUyX9\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../../api/api';\nimport s from './reviews.module.css';\n\nconst Reviews = () => {\n  const [data, setData] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const response = await api.reviews(movieId);\n        setData(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetch();\n    // eslint-disable-next-line\n  }, []);\n\n  if (data.length === 0)\n    return (\n      <p className={s.notInfo}>We don't have any reviews for this movie</p>\n    );\n  if (data.length !== 0) {\n    return (\n      <ul className={s.list}>\n        {data.map((el, id) => (\n          <li className={s.item} key={id}>\n            <p className={s.author}>\n              <b>Author: </b> {el.author}\n            </p>\n            <p className={s.content}>{el.content}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n};\n\nexport default Reviews;"],"names":["API_KEY","axios","dataFetchApi","trend","page","respons","data","results","search","query","fetchId","id","cast","reviews","api","useState","setData","movieId","useParams","useEffect","fetch","response","console","log","length","className","s","map","el","author","content"],"sourceRoot":""}